// ------------------------------------------------------------------------------
// data types for the elements in a config json file (generated by ChatGPT 3.5, slightly reworked manually)
// ------------------------------------------------------------------------------

// value chain ------------------------------------------------
export interface ValueDegradation {
    function:                   string  // "discounted", "expired", "none"
    argument:                   number  
}

export interface Injection {
    throughput:                 number
    probability:                number
}

export interface ProcessStep {
    process_step_id:            string
    norm_effort:                number
    wip_limit?:                 number
}

export interface ValueChain {
    value_chain_id:             string
    value_add:                  number
    value_degradation:          ValueDegradation
    injection:                  Injection
    process_steps:              ProcessStep[]
}


// worker ------------------------------------------------
export interface SelectionCriterion {
    measure:                    string
    selection_criterion:        'maximum' | 'minimum'
}

export interface WorkItemSelectionStrategy {
    id:                         string
    strategy:                   SelectionCriterion[]
}

export interface WorkItemSelectionStrategies {
    workitem_selection_strategies:  WorkItemSelectionStrategy[]
}

export interface ProcessStepAssignment {
    value_chain_id:             string
    process_steps_id:           string
}

export interface Worker {
    worker_id:                      string
    workitem_selection_strategies:  WorkItemSelectionStrategies
    process_step_assignments:       ProcessStepAssignment[]
}

// frontend pre-settings ------------------------------------------------
export interface FrontendPresetParms {
    num_iterations_per_batch:   number
    economics_stats_interval:   number
};

export interface LearnAndAdaptParms {          // workers learn and adapt 
    observation_period:         number
    success_measure_function:   string
    adjustment_factor:          number
};

export interface WipLimitSearchParms {
    initial_temperature:        number
    cooling_parm:               number
    degrees_per_downhill_step_tolerance: number;
    initial_jump_distance:      number
    measurement_period:         number
    wip_limit_upper_boundary_factor: number
    search_on_at_start:         boolean
    verbose:                    boolean
};

// system configuration ------------------------------------------------
export interface Configuration {
    system_id: string;
    frontend_preset_parameters: FrontendPresetParms
    learn_and_adapt_parms:      LearnAndAdaptParms
    wip_limit_search_parms:     WipLimitSearchParms
    value_chains:               ValueChain[]
    workers:                    Worker[]
}
